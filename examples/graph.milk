class Graph:
    function init(vertices, *edges):
        self._adjacencyList = { v: [] for v in vertices }

        for [v1, v2] in edges:
            self.addEdge(v1, v2)

    function getVertices():
        return [v for v in self._adjacencyList]

    function getNeighbors(v):
        return self._adjacencyList[v]

    function addEdge(v1, v2):
        for [x, y] in [[v1, v2], [v2, v1]]:
            self._adjacencyList[x].push(y)

    function hasEdge(v1, v2):
        return v2 in self._adjacencyList[v1]

    function removeEdge(v1, v2):
        for [x, y] in [[v1, v2], [v2, v1]]:
            self._adjacencyList[x] = self._adjacencyList[x].filter(x => x != y)

    function addVertex(v):
        if v not in self._adjacencyList:
            self._adjacencyList[v] = []

    function hasVertex(v):
        return v in self._adjacencyList

    function removeVertex(v):
        for w in self.getNeighbors(v):
            self.removeEdge(v, w)

        delete self._adjacencyList[v]

space = [i + ',' + j for i in [1...3] for j in [1...3]]
graph = new Graph(space, ['1,1', '1,2'], ['1,1', '1,3'], ['1,1', '2,1'], ['1,1', '3,1'])

console.log(graph.getVertices())
console.log(graph.getNeighbors('1,1'))

graph.removeVertex('1,3')
console.log(graph.getNeighbors('1,1'))
